plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.spring'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	// JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// Lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// JUnit
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Postgresql
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
//	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.6' // 추가
//	runtimeOnly 'org.postgresql:postgresql' // 추가

	// H2
	runtimeOnly 'com.h2database:h2'

	implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'com.fasterxml.jackson.core:jackson-databind'
}

tasks.named('test') {
	useJUnitPlatform()
}

// node_modules 디렉토리가 존재하지 않을 경우 npm install을 실행하는 태스크
tasks.register('npmInstall', Exec) {
	workingDir 'src/main/frontend'
	commandLine 'npm', 'install'
	onlyIf { !new File('src/main/frontend/node_modules').exists() }
}

// npm run build를 실행하는 태스크
tasks.register('npmRunBuild', Exec) {
	dependsOn npmInstall
	workingDir 'src/main/frontend'
	commandLine 'npm', 'run', 'build'
}

// processResources 태스크가 실행되기 전에 npmRunBuild 태스크를 실행하도록 설정
// processResources 태스크는 리소스 파일을 클래스 디렉토리로 복사하는 태스크입니다.
processResources.dependsOn npmRunBuild
